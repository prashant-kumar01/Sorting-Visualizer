{"version":3,"sources":["Components/Visuals/Visual.module.css","Components/Algorithm/MergeSort.js","Components/Algorithm/BubbleSort.js","Components/Algorithm/QuickSort.js","Components/Visuals/ArrayBar/ArrayBar.js","Components/Visuals/Visual.js","Components/Algorithm/InsertionSort.js","Components/Algorithm/SelectionSort.js","App.js","index.js"],"names":["module","exports","getMergeSortAnimations","array","animations","length","auxiliaryArray","slice","mergeSortHelper","mainArray","startIdx","endIdx","middleIdx","Math","floor","k","i","j","push","doMerge","getBubbleSortAnimations","arr","n","swap","console","log","bubbleSort","xp","yp","temp","getQuickSortAnimations","quickSort","items","leftIndex","rightIndex","left","right","index","pivotIndex","pivot","partition","ArrayBars","props","style","backgroundColor","unsortedColor","height","value","width","display","margin","marginTop","className","class","UNSORTED_COLOR","ACTIVE_COLOR","Visual","useState","setArray","number","setNumber","ANIMATION_SPEED_MS","setTime","change","setChange","screen","window","w","useEffect","insertionSort","inputArr","current","getInsertionSortAnimations","arrayBars","document","getElementsByClassName","barOneIdx","barTwoIdx","barOneStyle","barTwoStyle","color","color1","setTimeout","newHeight","classes","clear","clearIn","head","arrayContainer","Bars","map","idx","ArrayBar","border","verticalAlign","sideBar","font","borderBottom","marginLeft","marginBottom","type","max","min","onChange","event","target","Input","placeholder","boxShadow","borderTop","fontSize","cursor","Button","onClick","random","tmp","selectionSort","getSelectionSortAnimations","SelectionSort","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.90ae0dfe.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"arrayContainer\":\"Visual_arrayContainer__35FDF\",\"Bars\":\"Visual_Bars__3Hh3l\",\"sideBar\":\"Visual_sideBar__cNqyB\",\"Button\":\"Visual_Button__1lspb\",\"font\":\"Visual_font__1QafF\",\"Input\":\"Visual_Input__2DJPz\",\"clear\":\"Visual_clear__3NNS6\",\"clearIn\":\"Visual_clearIn__SCKpr\",\"head\":\"Visual_head__2emcx\"};","export function getMergeSortAnimations(array) {\n    const animations = [];\n    if (array.length <= 1) return array;\n    const auxiliaryArray = array.slice();\n    mergeSortHelper(array, 0, array.length - 1, auxiliaryArray, animations);\n    return animations;\n  }\n  \n  function mergeSortHelper(\n    mainArray,\n    startIdx,\n    endIdx,\n    auxiliaryArray,\n    animations,\n  ) {\n    if (startIdx === endIdx) return;\n    const middleIdx = Math.floor((startIdx + endIdx) / 2);\n    mergeSortHelper(auxiliaryArray, startIdx, middleIdx, mainArray, animations);\n    mergeSortHelper(auxiliaryArray, middleIdx + 1, endIdx, mainArray, animations);\n    doMerge(mainArray, startIdx, middleIdx, endIdx, auxiliaryArray, animations);\n  }\n  \n  function doMerge(\n    mainArray,\n    startIdx,\n    middleIdx,\n    endIdx,\n    auxiliaryArray,\n    animations,\n  ) {\n    let k = startIdx;\n    let i = startIdx;\n    let j = middleIdx + 1;\n    while (i <= middleIdx && j <= endIdx) {\n      animations.push([i, j]);\n      animations.push([i, j]);\n      if (auxiliaryArray[i] <= auxiliaryArray[j]) {\n        animations.push([k, auxiliaryArray[i]]);\n        mainArray[k++] = auxiliaryArray[i++];\n      } else {\n        animations.push([k, auxiliaryArray[j]]);\n        mainArray[k++] = auxiliaryArray[j++];\n      }\n    }\n    while (i <= middleIdx) {\n      animations.push([i, i]);\n      animations.push([i, i]);\n      animations.push([k, auxiliaryArray[i]]);\n      mainArray[k++] = auxiliaryArray[i++];\n    }\n    while (j <= endIdx) {\n      animations.push([j, j]);\n      animations.push([j, j]);\n      animations.push([k, auxiliaryArray[j]]);\n      mainArray[k++] = auxiliaryArray[j++];\n    }\n  }\n  ","export function getBubbleSortAnimations(array) {\n  const animations = [];\n  if (array.length <= 1) return array;\n  const auxiliaryArray = array.slice();\n  bubbleSort(array, array.length - 1, auxiliaryArray, animations);\n  console.log(auxiliaryArray + '\\n');\n  return animations;\n}\nfunction swap(arr, xp, yp) {\n  var temp = arr[xp];\n  arr[xp] = arr[yp];\n  arr[yp] = temp;\n}\n\n// An optimized version of Bubble Sort\nfunction bubbleSort(arr, n, auxiliaryArray, animations) {\n  var i, j;\n  for (i = 0; i <n; i++) {\n    for (j = 0; j <n - i; j++) {\n      animations.push([i, j]);\n      animations.push([i, j]);\n      if (auxiliaryArray[j] < auxiliaryArray[j + 1]) {\n        swap(auxiliaryArray, j, j + 1);\n        animations.push([i, auxiliaryArray[j + 1]]);\n      } else {\n        animations.push([i, auxiliaryArray[j + 1]]);\n      }\n    }\n  }\n  animations.push([i, j]);\n  animations.push([i, j]);\n  animations.push([i, auxiliaryArray[0]]);\n  console.log(animations[i]);\n}\n","export function getQuickSortAnimations(array) {\n  const animations = [];\n  if (array.length <= 1) return array;\n  //   const auxiliaryArray = array.slice();\n  quickSort(array, 0, array.length-1, animations);\n  return animations;\n}\nfunction swap(items, leftIndex, rightIndex) {\n  var temp = items[leftIndex];\n  items[leftIndex] = items[rightIndex];\n  items[rightIndex] = temp;\n}\nfunction partition(items, left, right,animations) {\n  var pivotIndex=Math.floor((right + left) / 2);\n  var pivot = items[Math.floor((right + left) / 2)], //middle element\n    i = left, //left pointer\n    j = right; //right pointer\n  while (i <= j) {\n    animations.push([i, pivotIndex]);\n    animations.push([i, pivotIndex]);\n    animations.push([i, items[i]]);\n    while (items[i] < pivot) {\n      i++;\n    }\n    while (items[j] > pivot) {\n      j--;\n    }\n    if (i <= j) {\n      swap(items, i, j); //sawpping two elements\n      i++;\n      j--;\n    }\n  }\n  return i;\n}\n\nfunction quickSort(items, left, right, animations) {\n  var index;\n  if (items.length >=1) {\n    index = partition(items, left, right,animations); //index returned from partition\n    if (left < index - 1) {\n      //more elements on the left side of the pivot\n      quickSort(items, left, index - 1, animations);\n    }\n    if (index < right) {\n      //more elements on the right side of the pivot\n      quickSort(items, index, right, animations);\n    }\n    animations.push([left, index]);\n    animations.push([left, index]);\n    animations.push([index, items[index]]);\n  }\n}\n","const ArrayBars=(props)=>{\n    let style={\n        backgroundColor:`${props.unsortedColor}`,\n        height:`${props.value}px`,\n        width:`${props.width}px`,\n        display:\"absolute\",\n        margin:\"0 2px\",\n        marginTop:`${700-props.value}px`\n    }\n    return(\n        <div style={{display:'inline-block'}}>\n            <div style={style} className={props.class}></div>\n        </div>\n    )\n}\nexport default ArrayBars;","import { useEffect, useState } from \"react\";\nimport { getMergeSortAnimations } from \"../Algorithm/MergeSort\";\nimport { getBubbleSortAnimations } from \"../Algorithm/BubbleSort\";\nimport { getInsertionSortAnimations } from \"../Algorithm/InsertionSort\";\nimport { getQuickSortAnimations } from \"../Algorithm/QuickSort\";\nimport { getSelectionSortAnimations } from \"../Algorithm/SelectionSort\";\nimport { Fragment } from \"react\";\nimport ArrayBar from \"./ArrayBar/ArrayBar\";\nimport classes from \"./Visual.module.css\";\nconst UNSORTED_COLOR = \"rgb(155, 9, 223)\";\nconst UNSORTED_BORDER_COLOR = \"rgb(155, 9, 223)\";\nconst ACTIVE_COLOR = \"white\";\nconst Visual = () => {\n  const [array, setArray] = useState([]);\n  const [number, setNumber] = useState(50);\n  const [ANIMATION_SPEED_MS, setTime] = useState(7);\n  const [change, setChange] = useState(false);\n  const InputHandler = (event) => {\n    setChange(false);\n    let n = event.target.value;\n    if (n > 200) {\n      n = 200;\n    } else if (n < 20) {\n      n = 20;\n    }\n    setTime(8 - Math.floor(n / 100));\n    setNumber(n);\n  };\n  let screen = (window.screen.width / 100) * 75;\n  let w = Math.floor(screen / number) - 3;\n  useEffect(() => {\n    screen = (window.screen.width / 10) * 8;\n    w = Math.floor(screen / number) - 3;\n  }, [change]);\n\n  const resetArray = () => {\n    const array = [];\n    for (let i = 0; i < number; i++) {\n      array.push(randomNumber(5, 700));\n    }\n    setChange(true);\n    setArray(array);\n  };\n\n  const mergeSort = () => {\n    const animations = getMergeSortAnimations(array);\n    for (let i = 0; i < animations.length; i++) {\n      const arrayBars = document.getElementsByClassName(\"array-bar\");\n      const isColorChange = i % 3 !== 2;\n      if (isColorChange) {\n        const [barOneIdx, barTwoIdx] = animations[i];\n        const barOneStyle = arrayBars[barOneIdx].style;\n        const barTwoStyle = arrayBars[barTwoIdx].style;\n        let color = i % 3 === 0 ? ACTIVE_COLOR : UNSORTED_COLOR;\n        setTimeout(() => {\n          barOneStyle.backgroundColor = color;\n          barTwoStyle.backgroundColor = color;\n        }, i * ANIMATION_SPEED_MS);\n      } else {\n        setTimeout(() => {\n          const [barOneIdx, newHeight] = animations[i];\n          const barOneStyle = arrayBars[barOneIdx].style;\n          barOneStyle.height = `${newHeight}px`;\n          barOneStyle.marginTop = `${700 - newHeight}px`;\n        }, i * ANIMATION_SPEED_MS);\n      }\n    }\n  };\n\n  const quickSort = () => {\n    const animations = getQuickSortAnimations(array);\n    console.log(animations);\n    for (let i = 0; i < animations.length; i++) {\n      const arrayBars = document.getElementsByClassName(\"array-bar\");\n      const isColorChange = i % 3 !== 2;\n      if (isColorChange) {\n        const [barOneIdx, barTwoIdx] = animations[i];\n        if (arrayBars[barOneIdx] || arrayBars[barTwoIdx]) {\n          console.log(animations[i]);\n        }\n        const barOneStyle = arrayBars[barOneIdx].style;\n        const barTwoStyle = arrayBars[barTwoIdx].style;\n        let color = i % 3 === 0 ? ACTIVE_COLOR : UNSORTED_COLOR;\n        setTimeout(() => {\n          barOneStyle.backgroundColor = color;\n          barTwoStyle.backgroundColor = color;\n        }, i * ANIMATION_SPEED_MS);\n      } else {\n        setTimeout(() => {\n          const [barOneIdx, newHeight] = animations[i];\n          const barOneStyle = arrayBars[barOneIdx].style;\n          barOneStyle.height = `${newHeight}px`;\n          barOneStyle.marginTop = `${700 - newHeight}px`;\n        }, i * ANIMATION_SPEED_MS);\n      }\n    }\n  };\n  const insertionSort = () => {\n    const animations = getInsertionSortAnimations(array);\n    console.log(animations);\n    for (let i = 0; i < animations.length; i++) {\n      const arrayBars = document.getElementsByClassName(\"array-bar\");\n      const isColorChange = i % 3 !== 2;\n      if (isColorChange) {\n        const [barOneIdx, barTwoIdx] = animations[i];\n        const barOneStyle = arrayBars[barOneIdx].style;\n        const barTwoStyle = arrayBars[barTwoIdx].style;\n        let color = i % 3 === 0 ? ACTIVE_COLOR : UNSORTED_COLOR;\n        let color1 = i % 3 === 0 ? ACTIVE_COLOR : UNSORTED_COLOR;\n        setTimeout(() => {\n          barOneStyle.backgroundColor = color1;\n          barTwoStyle.backgroundColor = color;\n        }, i * ANIMATION_SPEED_MS);\n      } else {\n        setTimeout(() => {\n          const [barOneIdx, newHeight] = animations[i];\n          const barOneStyle = arrayBars[barOneIdx].style;\n          barOneStyle.height = `${newHeight}px`;\n          barOneStyle.marginTop = `${700 - newHeight}px`;\n        }, i * ANIMATION_SPEED_MS);\n      }\n    }\n  };\n  const SelectionSort = () => {\n    const animations = getSelectionSortAnimations(array);\n    console.log(animations);\n    for (let i = 0; i < animations.length; i++) {\n      const arrayBars = document.getElementsByClassName(\"array-bar\");\n      const isColorChange = i % 3 !== 2;\n      if (isColorChange) {\n        const [barOneIdx, barTwoIdx] = animations[i];\n        const barOneStyle = arrayBars[barOneIdx].style;\n        const barTwoStyle = arrayBars[barTwoIdx].style;\n        let color = i % 3 === 0 ? ACTIVE_COLOR : UNSORTED_COLOR;\n        setTimeout(() => {\n          barOneStyle.backgroundColor = color;\n          barTwoStyle.backgroundColor = color;\n        }, i * ANIMATION_SPEED_MS);\n      } else {\n        setTimeout(() => {\n          const [barOneIdx, newHeight] = animations[i];\n          const barOneStyle = arrayBars[barOneIdx].style;\n          barOneStyle.height = `${newHeight}px`;\n          barOneStyle.marginTop = `${700 - newHeight}px`;\n        }, i * ANIMATION_SPEED_MS);\n      }\n    }\n  };\n  const bubbleSort = () => {\n    const animations = getBubbleSortAnimations(array);\n    console.log(animations);\n    for (let i = 0; i < animations.length; i++) {\n      const arrayBars = document.getElementsByClassName(\"array-bar\");\n      const isColorChange = i % 3 !== 2;\n      if (isColorChange) {\n        const [barOneIdx, barTwoIdx] = animations[i];\n        const barOneStyle = arrayBars[barOneIdx].style;\n        const barTwoStyle = arrayBars[barTwoIdx].style;\n        let color = i % 3 === 0 ? ACTIVE_COLOR : UNSORTED_COLOR;\n        setTimeout(() => {\n          barOneStyle.backgroundColor = color;\n          barTwoStyle.backgroundColor = color;\n        }, i * ANIMATION_SPEED_MS);\n      } else {\n        setTimeout(() => {\n          const [barOneIdx, newHeight] = animations[i];\n          const barOneStyle = arrayBars[barOneIdx].style;\n          barOneStyle.height = `${newHeight}px`;\n          barOneStyle.marginTop = `${700 - newHeight}px`;\n        }, i * ANIMATION_SPEED_MS);\n      }\n    }\n  };\n\n  return (\n    <Fragment>\n      <div className={classes.clear}>\n        <div className={classes.clearIn}>\n          <h1 className={classes.head}>Invalid screen Ratio</h1>\n          <h3>Use Laptop or personal Computer for Best Experience</h3>\n        </div>\n      </div>\n      <div className={classes.arrayContainer}>\n        <div className={classes.Bars}>\n          {change &&\n            array.map((value, idx) => {\n              return (\n                <ArrayBar\n                  key={idx}\n                  value={value}\n                  unsortedColor={UNSORTED_COLOR}\n                  border={UNSORTED_BORDER_COLOR}\n                  width={w}\n                  class=\"array-bar\"\n                  style={{ verticalAlign: \"bottom\" }}\n                />\n              );\n            })}\n        </div>\n        <div className={classes.sideBar}>\n          <h1 className={classes.font}>Sorting</h1>\n          <h2 className={classes.font}>Algorithm</h2>\n          <h2\n            style={{ borderBottom: \"2px solid rgb(155, 9, 223)\" }}\n            className={classes.font}\n          >\n            Visualizer\n          </h2>\n          <h5\n            style={{\n              marginLeft: \"10px\",\n              marginTop: \"20px\",\n              marginBottom: \"-10px\",\n              color: \"rgb(155, 9, 223)\",\n            }}\n          >\n            Number of Bars:\n          </h5>\n          <input\n            type=\"number\"\n            max=\"200\"\n            min=\"20\"\n            onChange={InputHandler}\n            className={classes.Input}\n            placeholder={number}\n          ></input>\n          <h6\n            style={{\n              marginLeft: \"10px\",\n              marginTop: \"-10px\",\n              color: \"rgb(155, 9, 223)\",\n            }}\n          >\n            (min:20 max:200)\n          </h6>\n          <button\n            style={{\n              margin: \"20px 0\",\n              boxShadow: \"none\",\n              borderBottom: \"1px solid pink\",\n              borderTop: \"1px solid pink\",\n              fontSize: \"120%\",\n              cursor: \"pointer\"\n            }}\n            className={classes.Button}\n            onClick={resetArray}\n          >\n            Generate New Array\n          </button>\n          <h3\n            style={{\n              marginLeft: \"10px\",\n              marginBottom: \"1px\",\n              color: \"rgb(155, 9, 223)\",\n            }}\n          >\n            Algorithms:\n          </h3>\n          <button className={classes.Button} onClick={() => quickSort()}>\n            Quick Sort\n          </button>\n          <button className={classes.Button} onClick={mergeSort}>\n            Merge Sort\n          </button>\n          <button className={classes.Button} onClick={() => insertionSort()}>\n            Insertion Sort\n          </button>\n          <button className={classes.Button} onClick={() => SelectionSort()}>\n            Selection Sort\n          </button>\n          <button className={classes.Button} onClick={() => bubbleSort()}>\n            Bubble Sort\n          </button>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\n// From https://stackoverflow.com/questions/4959975/generate-random-number-between-two-numbers-in-javascript\nfunction randomNumber(min, max) {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\nfunction arraysAreEqual(arrayOne, arrayTwo) {\n  if (arrayOne.length !== arrayTwo.length) return false;\n  for (let i = 0; i < arrayOne.length; i++) {\n    if (arrayOne[i] !== arrayTwo[i]) {\n      return false;\n    }\n  }\n  return true;\n}\nexport default Visual;\n","export function getInsertionSortAnimations(array) {\n  const animations = [];\n  if (array.length <= 1) return array;\n  //   const auxiliaryArray = array.slice();\n  insertionSort(array, array.length, animations);\n  //   insertionSort(array,array.length,animations);\n  console.log(animations);\n  return animations;\n}\nfunction insertionSort(inputArr, n, animations) {\n  for (let i = 1; i < n; i++) {\n    // Choosing the first element in our unsorted subarray\n    let current = inputArr[i];\n    // The last element of our sorted subarray\n    let j = i - 1;\n    while (j > -1 && current < inputArr[j]) {\n      inputArr[j + 1] = inputArr[j];\n      animations.push([i, j]);\n      animations.push([i, j]);\n      animations.push([j, inputArr[j]]);\n      j--;\n    }\n    inputArr[j + 1] = current;\n    animations.push([i, n-1]);\n    animations.push([i, n-1]);\n    animations.push([i, inputArr[i]]);\n  }\n  animations.push([0, 0]);\n    animations.push([0, 0]);\n    animations.push([0, inputArr[0]]);\n}\n","export function getSelectionSortAnimations(array) {\n  const animations = [];\n  if (array.length <= 1) return array;\n  selectionSort(array, array.length, animations);\n  return animations;\n}\nfunction selectionSort(inputArr, n, animations) {\n  for (let i = 0; i < n; i++) {\n    // Finding the smallest number in the subarray\n    let min = i;\n    for (let j = i + 1; j < n; j++) {\n        animations.push([i, j]);\n        animations.push([i, j]);\n        animations.push([min, inputArr[min]]);\n      if (inputArr[j] < inputArr[min]) {\n        min = j;\n        animations.push([i, j]);\n        animations.push([i, j]);\n        animations.push([min, inputArr[min]]);\n      }\n    }\n    if (min != i) {\n      // Swapping the elements\n      let tmp = inputArr[i];\n      inputArr[i] = inputArr[min];\n      inputArr[min] = tmp;\n      animations.push([i, min]);\n      animations.push([i, min]);\n      animations.push([i, inputArr[i]]);\n    }\n  }\n  animations.push([n-1, n-1]);\n  animations.push([n-1, n-1]);\n  animations.push([n-1, inputArr[n-1]]);\n}\n","import Visual from './Components/Visuals/Visual'\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Visual/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}